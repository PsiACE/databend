name: Unit Tests
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  TARPAULIN_VERSION: 0.18.3
  RUST_TEST_THREADS: 2
  RUST_LOG: debug
  RUST_BACKTRACE: full

jobs:
  test:
    name: "Tests"
    timeout-minutes: 80
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true
      matrix:
        config:
          # Linux
          - { os: ubuntu-latest, toolchain: stable, target: x86_64-unknown-linux-gnu, cross: false }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Rust setup
        run: |
          bash ./scripts/setup/dev_setup.sh

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-cargo-coveragecache-${{ secrets.CACHE_RESET_KEY }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-coveragecache-${{ secrets.CACHE_RESET_KEY }}-
            ${{ runner.os }}-cargo-coveragecache-

      - name: Install tarpaulin
        run: |
          wget https://github.com/xd009642/tarpaulin/releases/download/${{ env.TARPAULIN_VERSION }}/cargo-tarpaulin-${{ env.TARPAULIN_VERSION }}-travis.tar.gz
          tar -zxvf cargo-tarpaulin-${{ env.TARPAULIN_VERSION }}-travis.tar.gz -C $HOME/.cargo/bin

      - name: Run code coverage
        timeout-minutes: 60
        run: cargo tarpaulin --all-features --no-fail-fast --timeout 180 --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          path: |
            _local_fs/
            _logs/
            _meta/
            metasrv/_logs/
            query/_logs/
            store/_logs/
